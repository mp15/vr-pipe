0.108   Critical fixes for convex_plots and fastq_split steps
0.107   New vrpipe-mv tool, useful for moving the output root directory of a
        setup to a new location. vrpipe-fileinfo now reports on files produced
        by dataelements that have not yet finished the pipeline.
        GATK2-specific steps now default to finding the GATK2 jar file in a
        GATK2 environment variable.
        New convex plot generation pipeline.
        Fixes for the grouping methods of some datasources, so that they do not
        create empty, useless dataelements.
0.106   Improved handling of paths entered on the command-line: leading and
        trailing whitespace is now stripped. New pipelines and steps for
        carrying out tasks with GATK v2. bwa_index step updated with support for
        the latest version of BWA. fastq_merge_and_index step speeded up.
        vrpipe-status gains a --defunct option to report on bad setups that
        are candidates for deletion.
        vrpipe-setup gains a --cleanup option to delete output files made for
        now withdrawn dataelements, recovering wasted disk space for completed
        projects.
0.105   Fix for vrpipe-status so that it no longer produces wild submission
        state numbers while reporting on a setup with a large number of
        currently changing submissions. Fix for the fastq_merge_and_index step
        so that it no longer uses up all database connections.
0.104   No changes to the code were made in this version. This release only
        corrects the upgrading instructions in IMPORTANT_NOTES for v0.103. If
        you already upgraded to 0.103, IMPORTANT_NOTES also contains advice on
        how to fix issues that may have arrisen.
0.103   WARNING: if upgrading, follow the instructions in IMPORTANT_NOTES before
        installing this version.
        Changes were made to how DataElements store input file paths in the
        database, now allowing a virtually unlimited number of paths, needed
        for some kinds of Step. This also fixes cases of extraneous DataElement
        withdrawal and needless repetition of work.
        A fix was made to make VRPipe fully functional on recent stock Ubuntu
        installs.
        A fix was made so that Jobs get properly killed when necessary.
        vrpipe-fileinfo and vrpipe-output gained a --include_withdrawn option.
        General improvements were made to SNP calling pipelines.
0.102   SGA-related improvements, including the ability to create and call on
        bam chunks.
0.101   vrtrack datasource fixed so that it does not create elements in
        group_by_metadata mode if any member of the group has no files.
0.100   New auto_qc_min_ins_to_del_ratio option for AutoQC pipeline. When Job
        stdout/err is archived, it is now limited to first and last 500 lines
        to avoid storing massive files. See IMPORTANT_NOTES if you want to clean
        up any large files you've already created.
0.99    Critical fix for memory leaks and slow-down problems when dealing with
        pipeline steps that have 10s of input files and produce 100s of
        duplicate submissions - like the new SNP calling pipeline(s). See
        IMPORTANT_NOTES if upgrading.
0.98    Fix for fastqc_quality_report and cufflinks steps to make them work in
        production.
0.97    Fix for vrpipe group_all method to wait until all elements are complete.
        Fix for the chunking DataSource variants, so their methods are shown
        when running vrpipe-setup. Fix for the retroseq_call step, for
        compatability with the latest version of retroseq.
0.96    Fix for Requirments, allowing reservation of over 999 hrs. See
        IMPORTANT_NOTES if upgrading. The use of Environement variables has
        been cleaned up and clarified; see the updated README.
0.95    This version overhauls a number of SNP-calling-related piplines and
        steps. If upgrading, be sure to read IMPORTANT_NOTES. The changes are
        primarily concerned with moving the choice to do 'chunked' calling (as
        opposed to calling across the whole genome at once) to the DataSource,
        instead of having 2 separate piplines, one for whole-genome, one for
        genome chunks. The change improves efficiency and makes it easier to
        restart/trouble-shoot failed chunks.
        Deleted pipelines:
            gatk_genotype (renamed snp_calling_gatk_unified_genotyper)
            gatk_variant_calling_and_filter_vcf (renamed snp_calling_gatk_unified_genotyper_and_filter_vcf)
            mpileup_with_leftaln
            snp_calling_chunked_mpileup_bcf (replaced by snp_calling_mpileup_via_bcf.pm + genome chunking)
            snp_calling_chunked_mpileup_vcf (replaced by snp_calling_mpileup.pm + genome chunking)
            snp_calling_gatk_vcf (replaced by snp_calling_gatk_unified_genotyper_and_filter_vcf + vqsr_for_snps)
            snp_calling_mpileup_vcf (renamed snp_calling_mpileup)
            snp_calling_mpileup_bcf (renamed snp_calling_mpileup_via_bcf)
            vcf_chunked_vep_annotate (renamed vcf_split_and_vep_annotate)
        Modified pipelines:
            vcf_filter_merge_and_vep_annotate (vcf_index step added throughout)
            vcf_vep_annotate (vcf_index step added at the end)
        New pipelines:
            vcf_concat.pm
            merge_vcfs_to_site_list_and_recall_from_bcf
            snp_calling_mpileup
            snp_calling_gatk_unified_genotyper
            snp_calling_mpileup_from_bcf
            snp_calling_mpileup_via_bcf
            vcf_split_and_vep_annotate
            vqsr_for_snps
            snp_calling_gatk_unified_genotyper_and_filter_vcf
0.94    Critical fix for getting interface_port when it is set as an environment
        variable. See also the recent 0.93 changes.
0.93    This version features the beginning of a more radicial overhaul,
        introducing vrpipe-server, which is a trivial-memory, trivial-cpu
        daemon process that will eventually run the whole system, discovering
        and dispatching jobs. In this version it only serves the frontends (both
        cmd-line and web, and currently only for vrpipe-status) and runs the
        local scheduler (if you have that configured). vrpipe-server will be
        started automatically when needed. When it starts it gives you the
        website address you can visit. This is actually faster than using the
        equivalent cmd-line tool. Please see IMPORTANT_NOTES if upgrading.
        
        The fofn, fofn_with_metadata and vrpipe DataSources now have a new
        method 'group_all', which is useful for 'merge' type pipelines.
0.92    vrpipe-setup script can now --reset or --delete an existing
        PipelineSetups, to completely wipe out all progress on them. Fixed
        critical bug in the sequence_index DataSource.
0.91    When VRPipe counts the number of records in a bam, it now uses the
        samtools executable in the $SAMTOOLS directory, not the first one in the
        $PATH.
0.90    Upgraded irods step to make it compatible with latest version of
        ichksum (critical fix for any irods-related pipeline).
0.89    Fixed critical bug in Submission reserved memory calculation that could
        prevent certain pipelines from proceeding when a step ran out of memory.
0.88    bam_to_fastq step can now take an option to allow it to not care about
        keeping the forward and reverse fastq files "in-sync", which helps with
        the SGA-related steps.
0.87    vrpipe-db_upgrade no longer takes --from and --to options, but instead
        will correctly upgrade the database from its current version to the
        latest, avoiding user-error. Bug-fix for vrpipe-elements so that -f
        works again.
0.86    Minor bug fix for getting file md5s. When the system has created
        symlinks (eg. vrpipe-output was used) and the source file of a symlink
        is moved, all symlinks are automatically corrected. The LSF scheduler
        now implements the cpus requirement. SGA steps bug fixed and now have
        support for gzipped fastq files.
0.85    bam_add_readgroup step now allows you to choose what metadata key SM is
        set from, eg. you could have it come from individual instead of sample
0.84    Critical fix for the VRTrack datasource, so that it copes with metadata
        changes better.
0.83    Further critical fixes to the new PerlTidy module. All Perl code has now
        been tidied.
0.82    Critical fix to the new PerlTidy module so that it does not break
        classes when tidying. Critical fix for VRPipe::File to revert to
        previous behaviour of keeping file metadata even after file deletion.
0.81    This version features major changes to how the underlying system
        interacts with the database, which results in greatly improved speed
        (orders of magnitude in certain critical areas) and bounded memory
        usage. End-users of the front-end scripts like vrpipe-status are not
        really affected by the changes, but developers who have written their
        own VRPipe scripts, Steps or Pipelines should be aware of the following:
        
        Persistent methods (see updated POD of VRPipe::Persistent for details):
        create() replaces what get() used to do: get an instance of a Persistent
        object from the database, creating or updating it if necessary. get()
        has been changed to only retrieve and update - it no longer creates but
        throws if the row isn't already in the database. get() should still be
        used whenever possible, especially in end-user scripts.
        Persistent instances now no longer access the database every time you
        call one of its methods to retrieve a column value. This means if you
        get an instance, then change column values in a different process, your
        instance will have out-of-date values. You can use new method
        reselect_values_from_db() to update your instance.
        There are new methods search(), get_column_values(), (also with
        *_paged() variants) and search_rs() for fast retrieval of many rows.
        New method bulk_create_or_update() lets you create many rows quickly.
        New method dump() can be used when debugging, letting you Dumper a
        Persistent instance without outputting tons of irrelevent information to
        the screen.
        New method do_transaction() can be used for doing a series of operations
        in a transaction.
        
        DataSource authors:
        source methods are now called safely, guaranteed single simultaneous
        process only. They no longer directly create or return DataElements
        themselves, but should call _create_elements() method instead.
        
        If you wish to contribute code with a pull request, please read the new
        DEVELOPERS file. It explains details of how to use our custom perltidy
        setup.
0.80    New bam_improvement_no_recal pipeline. New SGA-related pipelines. The
        vrtrack_auto_qc step now stores test results in the new VRTrack AutoQC
        table (instead of in a text file), and so requires VRTrack schema 20,
        which is found in the vr-codebase git repository version 0.04 or higher.
0.79    Another critical bug fix for dcc_metadata step. Bug fix for bam_reheader
        step. vrtrack_auto_qc step now has an extra metric.
0.78    Critical bug fix for dcc_metadata step. Bug fix for when a step input
        is a symlink and the pointed-to file has been deleted without VRPipe's
        knowledge.
0.77    When using SQLite as the database it may now lock up less, though the
        local scheduler remains incompatible with it. Fixes to metadata stored
        when merging bams, important for pipelines using bam_reheader step.
0.76    Another schema upgrade to add a missing index. See IMPORTANT_NOTES if
        upgrading.
0.75    Schema upgrade to provide better database indexes. See IMPORTANT_NOTES
        if upgrading.
0.74    Schema upgrade to allow the stats of multi-week-long running steps to
        be stored.
0.73    (re-)Added support for sqlite, though it is only really suitable for
        parsing as it may lock up if used for running pipelines. Fixed bug in
        LSF stdout parser.
0.72    Small fixes/improvements to steps fastq_split, bin2hapmap_sites and
        bam_name_sort.
0.71    New bam_improvement_and_update_vrtrack_no_recal pipeline.
0.70    New improvement pipeline that works with older versions of GATK. When
        QC step updates VRTrack database, now no longer overwrites manually
        applied qc_status.
0.69    New vrtrack_qc_graphs_and_auto_qc pipeline, suitable for rerunning QC
        on already imported or improved bams. Copyright and license information
        is now present on all source code files.
0.68    Critical fix for sequence_index datasource, so that it does not reset
        elements just because their center_name changed case.
0.67    New single-step bam indexing pipeline. New Conifer pipeline. New
        retroseq pipeline. Improved breakdancer pipeline. The vrpipe datasource
        now has an option to filter after grouping. The vrtrack_auto_qc pipeline
        now always fails a lane if the NPG status was failed. When a submission
        fails and is retried, the stdout/err of previous attempts is now
        accessible, eg. with vrpipe-submissions.
0.66    vrpipe-setup can now be used to change pipeline behaviours.
0.65    New breakdancer pipeline, single-step bam splitting pipeline, and the
        vrpipe datasource now applies the filter after grouping, requiring only
        1 file in the group to match the filter.
0.64    Fix for bam_reheader, affecting 1000 genomes pipelines.
0.63    Fix for rare bug in fastq_split which prevented it from working with
        certain input.
0.62    Critical fix for new queue switching code.
0.61    Now, if a job is running in a time-limited queue, and the limit is
        approaching, the job will be switched to a queue with a longer time
        limit.
0.60    Fix for vrpipe-setup to make it compatible with the new vrtrack_auto_qc
        pipeline.
0.59    New vrtrack_auto_qc pipeline. New (alternate) SNP pipeline. New
        vrpipe-permissions script.
0.58    Various fixes to enable initial install and testing for new users using
        latest CPAN modules.
0.57    vrpipe-fileinfo can now tell you how a file was generated.
0.56    New gatk_variant_calling_and_filter_vcf pipeline.
0.55    Further merge pipeline fixes. New bam realignment around discovered
        indels pipeline.
0.54    Further fix for new merge pipeline.
0.53    Fixed issues with bam merging pipelines, and renamed tham all.
0.52    New fofn_with_metadata DataSource - useful for inputting external bams
        into pipelines. VRTrack-releated steps now have
        deadlock-failure-avoidance.
0.51    VRTrack DataSource now has an option to group_by_metadata.
0.50    New merge_bams pipelines, to do "merge across". VRTrack datasource now
        allows filtering on more status types, and can get VRPipe improved bams.
0.49    Critical bug fix in bam_to_fastq step.
0.48    Tweaks and fixes to finalise new bam_genotype_checking pipeline.
0.47    Minor tweaks to finalise yet-unused pipelines.
0.46    New versions of merge lanes and stampy mapping pipelines with extra
        features.
0.45    Critical speed fix for vrtrack datasource. Library merge pipelines now
        index the resulting bams.
0.44    Fix for plot_bamcheck step, letting it work when then is no insert size.
0.43    Efficiency fix for vrtrack datasource.
0.42    Critical fix for vrtrack datasource, so that it now updates file
        metadata when vrtrack metadata changes.
0.41    vrtrack_update_improved step now sets lane reads and bases.
0.40    Critical fix for vrtrack_update_mapstats step, letting it work without
        exome_targets_file.
0.39    vrpipe DataSource behaviour changed, so that a child pipeline that
        deletes inputs won't mess up a parent that still needs those files.
        Overhauled the genotype checking pipeline and steps.
0.38	Fix for gatk_target_interval_creator step, increasing its default memory
        reservation.
0.37    Overhaul of qc graphs & stats-related steps and pipelines so that now
        wgs and exome projects all use the same pipeline, with a single bamcheck
        call. bam_to_fastq step fixed so that it runs in constant <500MB and
        copes with bams that miss reads.
0.36    Critical fixes to the underlying system to ensure job submission doesn't
        stall out forever, to handle limits on steps better, and to avoid issues
        when there are multiple submissions for the same job. Also a fix for
        java to increase likelyhood of jvm starting up.
0.35    vrpipe-status script improved to give a better overview of what the
        pipeline is doing, with warnings about pipeline stalls. bam_to_fastq
        step reimplemented, should now be much better.
0.34    Critical speed fix for the VRTrack datasource. Fixes for the
        archive_files pipeline and the vrtrack_update_mapstats step.
0.33    Optimised bam_import_from_irods_and_vrtrack_qc_wgs pipeline. Memory and
        time reserved for jobs is now less likely to be insufficient.
0.32    Fixes for bam_mapping_with_bwa_via_fastq and bam_reheader step.
        Efficiency improvement in how step max_simultaneous is handled.
0.31    Database independence now properly implemented. New separate bam
        improvement pipeline, remapping bams via fastq pipeline, and some
        Sanger-specific pipelines added.
0.30    Fixes related to archive_files pipeline.
0.29    New archive_files pipeline.
0.28    Really fix java-using steps so they get the memory they need.
0.27    Outputs of near-identical PipelineSetups will now never risk overwriting
        themselves. Java-using steps get better recommended memory. New
        IMPORTANT_NOTES file - you must read this!
0.26    Critical performance fix for StepStats.
0.25    New StepStats system for quick access to memory/time used stats.
0.24    Critical fix for mapping pipeline.
0.23    New Stampy mapping pipline. Fixes for SNP and DCC pipelines.
0.22    Critical fix for input files that are relative symlinks.
0.21    SNP discovery pipeline(s) now firming up; fixes for merging pipelines
0.20    Improved handling of limits, so that a good amount of jobs are always
        running.
0.19    Various fixes to 1000 genomes-related pipelines.
0.18    Fix to allow sqlite to be used in production.
0.17    Install process for new external users should now work/be easy.
0.16    New merging pipelines and associated vrpipe datasource (for chaining
        different pipelines together). Critical bug fixes that allow changes in
        datasources to trigger restarts for the changed elements.
0.15    Front-end for creating PipelineSetups; improvements to smalt mapping so
        we can map 454 data in 1000 genomes.
0.14    More front-end scripts added. Sequence index datasource now starts.
        changed elements over from scratch, so we can now change the source file
        safely.
0.13    Various fixes for pipelines. Memory leak issues fixed. Various front-end
        scripts added.
0.12    Fixes for bam_mapping_with_bwa. New VCF annotation-related steps and
        pipelines. Triggering pipelines in Manager has been optimised slightly.
0.11    Fixes for bam_mapping_with_bwa. New smalt mapping pipeline for handling
        454 sequence data.
0.10    Bam Improvement steps now fully implemented. New bam_mapping_with_bwa
        pipeline.
0.09    Scheduler independence: local can now be used for testing.
0.08    Submission retries now add time where necessary.
0.07    Fixed critical bug in mapping pipeline; should now work properly.
0.06    Myriad performance and stability improvements necessary to get the
        mapping pipeline running smoothly.
0.05    Critical performance fix for dealing with large datasources.
0.04    Critical performance fix for checking bam file type.
0.03    0.02 only worked on test dataset; this should be the first version to
        work on real data, following important schema changes and Step fixes.
0.02    Most interesting features not yet implemented, but this is the first
        working version, needed to do the 1000genomes phase2 (re)mapping.
0.01    No real files; just starting up repository.
