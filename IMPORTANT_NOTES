# version 0.93:
This version features a schema change, so be sure to run vrpipe-db_upgrade.
There are also new SiteConfig options, so be sure to go through and answer all
the questions of 'perl Build.PL'.
This version introduces vrpipe-server, which needs a port to bind to. It is safe
for multiple different people with their own VRPipe installs and databases to
run the server on the same machine, but you will encounter errors if you attempt
to use a port that someone else is using: pick a port number (during
'perl Build.PL') unique to your own install.

# version 0.81:
This version increments the schema version, so be sure to run vrpipe-db_upgrade
if you used a previous version of VRPipe.
There is also improved handling of duplicate database rows. Older versions of
VRPipe may have left you with many duplicate rows, most likely in the
dataelementstate and stepstate tables. You may like to manually remove these:
mysql> delete des from dataelementstate as des inner join (select min(id) minid, pipelinesetup, dataelement from dataelementstate group by pipelinesetup, dataelement having count(*) > 1) as dups on (dups.pipelinesetup = des.pipelinesetup and dups.dataelement = des.dataelement and dups.minid <> des.id);
mysql> delete t from stepstate as t inner join (select min(id) minid, stepmember, dataelement, pipelinesetup from stepstate group by stepmember, dataelement, pipelinesetup having count(*) > 1) as dups on (dups.stepmember = t.stepmember and dups.dataelement = t.dataelement and dups.pipelinesetup = t.pipelinesetup and dups.minid <> t.id);
Note that this may have strange effects on what the system thinks has completed,
but shouldn't cause any harm and is recommended.

# version 0.76:
Like 0.75, this version improves indexes. See the notes for 0.75 if upgrading.

# version 0.75:
This version increments the schema version, so be sure to run vrpipe-db_upgrade
if you used a previous version of VRPipe.
No actual changes to the schema itself were made, however the indexing of
columns has improved and vrpipe-db_upgrade will add new additional indexes to
necessary columns. It does not, however, remove the old defunct indexes; you are
encouraged to remove these yourself. The new indexes which should be kept are
all named [table_name]_idx_[column_name]. The old indexes which should be
dropped are named psuedo_idx and txt_idx. If you have used VRPipe for a very
long time there may be other indexes which you should delete (except for
PRIMARY).

# version 0.74:
Minor changes to the schema (size of some int columns); be sure to run
vrpipe-db_upgrade if you have used a previous version of VRPipe.

# version 0.73:
This version adds support for sqlite, though it currently locks up the database
whilst running pipelines; it is only really suited for parsing use.

# version 0.31:
This version introduces proper database independence, and also automatic
indexing of appropriate columns. The only converter written so far, however,
is for MySQL.

# version 0.27:
The schema has changed in this version. Be sure to run vrpipe-db_upgrade if you
have used a previous version of VRPipe.

# versions 0.01-0.30:
a) Only MySQL is fully supported so far, though it may work with other dbs.
b) There is currently an issue with indexing certain columns that are too large
   to be specified as varchars. After running vrpipe-db_deploy you will have
   to manually connect to your production database and issue the following SQL:
   create index path_index on file path(255);
   create index output_root_index on scheduler (output_root(255));
   create index cmd_dir_index on job (cmd(255), dir(255));
   create index requirements_index on requirements (custom(255));
   create index result_index on dataelement (result(255));
   create index source_options_index on datasource (source(255), options(255));
   create index outputroot_options_index on pipelinesetup (output_root(255), options(255));
   create index allowed_values_index on stepoption (allowed_values(255));
   create index metadata_index on stepiodefinition (metadata(255));
   create index summary_index on stepcmdsummary (summary(255));
